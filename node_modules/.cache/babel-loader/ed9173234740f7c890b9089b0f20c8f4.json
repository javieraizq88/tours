{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/3it/tours/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Loading from './Loading';\nimport Tours from './Tours';\nconst url = 'https://course-api.com/react-tours-project';\n\nfunction App() {\n  _s();\n\n  // agrega el loading cuando es true\n  const [loading, setLoading] = useState(true);\n  const [tours, setTours] = useState([]);\n\n  const removeTour = id => {\n    // si el id del tour NO coincide con el id que le estoy pasando, se agrega al array newTours\n    const newTours = tours.filter(tour => tour.id !== id);\n    setTours(newTours);\n  };\n\n  const fetchTours = async () => {\n    // para conocer los errores\n    // no se muestra el loading aunq haya errores\n    // los errores se muestran en el console\n    setLoading(true);\n\n    try {\n      const response = await fetch(url);\n      const tours = await response.json();\n      setLoading(false);\n      setTours(tours);\n    } catch (error) {\n      setLoading(false);\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchTours();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (tours.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"no tours left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => fetchTours(),\n          children: \"refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(Tours, {\n      tours: tours,\n      removeTour: removeTour\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"mbcX6C+tYQ2VWt9nPCTmsVwVrSc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/3it/tours/src/App.js"],"names":["React","useState","useEffect","Loading","Tours","url","App","loading","setLoading","tours","setTours","removeTour","id","newTours","filter","tour","fetchTours","response","fetch","json","error","console","log","length"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,MAAMC,GAAG,GAAG,4CAAZ;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMU,UAAU,GAAIC,EAAD,IAAQ;AACzB;AACA,UAAMC,QAAQ,GAAGJ,KAAK,CAACK,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACH,EAAL,KAAYA,EAAnC,CAAjB;AACAF,IAAAA,QAAQ,CAACG,QAAD,CAAR;AACD,GAJD;;AAKA,QAAMG,UAAU,GAAG,YAAY;AAC/B;AACA;AACA;AACER,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACF,YAAMS,QAAQ,GAAG,MAAMC,KAAK,CAACb,GAAD,CAA5B;AACA,YAAMI,KAAK,GAAG,MAAMQ,QAAQ,CAACE,IAAT,EAApB;AACAX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KALD,CAKE,OAAOW,KAAP,EAAc;AACdZ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAdD;;AAeAlB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAGA,MAAIT,OAAJ,EAAa;AACX,wBACE;AAAA,6BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,MAAIE,KAAK,CAACc,MAAN,KAAiB,CAArB,EAAwB;AACtB,wBACE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,SAAS,EAAC,KAAlB;AAAwB,UAAA,OAAO,EAAE,MAAMP,UAAU,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AACD,sBACE;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEP,KAAd;AAAqB,MAAA,UAAU,EAAEE;AAAjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GApDQL,G;;KAAAA,G;AAsDT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Loading from './Loading'\nimport Tours from './Tours'\nconst url = 'https://course-api.com/react-tours-project'\n\nfunction App() {\n  // agrega el loading cuando es true\n  const [loading, setLoading] = useState(true)\n  const [tours, setTours] = useState([])\n\n  const removeTour = (id) => {\n    // si el id del tour NO coincide con el id que le estoy pasando, se agrega al array newTours\n    const newTours = tours.filter((tour) => tour.id !== id)\n    setTours(newTours)\n  }\n  const fetchTours = async () => {\n  // para conocer los errores\n  // no se muestra el loading aunq haya errores\n  // los errores se muestran en el console\n    setLoading(true)\n    try {\n      const response = await fetch(url)\n      const tours = await response.json()\n      setLoading(false)\n      setTours(tours)\n    } catch (error) {\n      setLoading(false)\n      console.log(error)\n    }\n  }\n  useEffect(() => {\n    fetchTours()\n  }, [])\n  if (loading) {\n    return (\n      <main>\n        <Loading />\n      </main>\n    )\n  }\n  if (tours.length === 0) {\n    return (\n      <main>\n        <div className='title'>\n          <h2>no tours left</h2>\n          <button className='btn' onClick={() => fetchTours()}>\n            refresh\n          </button>\n        </div>\n      </main>\n    )\n  }\n  return (\n    <main>\n      <Tours tours={tours} removeTour={removeTour} />\n    </main>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}